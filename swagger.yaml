openapi: 3.0.2
info:
  title: Snowboard API üèÇ
  version: 21.10.07
paths:
  /api/auth/token:
    post:
      tags:
        - üîë auth
      summary: Login For Access Token
      operationId: login_for_access_token_api_auth_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_api_auth_token_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/auth/me/logout:
    post:
      tags:
        - üîë auth
      summary: Logout
      operationId: logout_api_auth_me_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
  /api/schedule/start_discovery:
    put:
      tags:
        - üïí schedule
      summary: discover data warehouse account
      operationId: refresh_objects_api_schedule_start_discovery_put
      parameters:
        - required: true
          schema:
            title: Host Name
            type: string
          name: host_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Refresh Objects Api Schedule Start Discovery Put
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/schedule/start_profiler:
    put:
      tags:
        - üïí schedule
      summary: profile all configured tables
      operationId: profile_columns_now_api_schedule_start_profiler_put
      parameters:
        - required: true
          schema:
            title: Host Name
            type: string
          name: host_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Profile Columns Now Api Schedule Start Profiler Put
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/schedule/start_parse_query_log:
    put:
      tags:
        - üïí schedule
      summary: parse query log
      operationId: parse_query_log_now_api_schedule_start_parse_query_log_put
      parameters:
        - required: true
          schema:
            title: Host Name
            type: string
          name: host_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Parse Query Log Now Api Schedule Start Parse Query Log Put
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/schedule/start_tableau_sync:
    put:
      tags:
        - üïí schedule
      summary: sync tableau site
      operationId: sync_tableau_objects_api_schedule_start_tableau_sync_put
      parameters:
        - required: true
          schema:
            title: Host Name
            type: string
          name: host_name
          in: query
        - required: true
          schema:
            title: Site
            type: string
          name: site
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Sync Tableau Objects Api Schedule Start Tableau Sync Put
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Token:
      title: Token
      required:
        - email
        - access_token
        - token_type
      type: object
      properties:
        email:
          title: Email
          type: string
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    Body_login_for_access_token_api_auth_token_post:
      title: Body_login_for_access_token_api_auth_token_post
      required:
        - username
        - password
      type: object
      properties:
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/auth/token

